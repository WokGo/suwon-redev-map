- hosts: web
  become: yes
  vars:
    app_root: /opt/app
    web_root: /var/www/html
  tasks:
    - name: 기본 패키지
      apt:
        name:
          - nginx
          - python3-venv
          - python3-pip
          - git
          - curl
        update_cache: yes
        state: present

    - name: Node.js 20 설치 (Nodesource)
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && apt-get install -y nodejs

    - name: Flask 앱 디렉토리 생성
      file: { path: "{{ app_root }}", state: directory, owner: ubuntu, group: ubuntu, mode: '0755' }

    - name: 프론트 정적 디렉토리 생성
      file: { path: "{{ web_root }}", state: directory, owner: www-data, group: www-data, mode: '0755' }

    - name: 웹 루트 임시 권한 부여
      file:
        path: "{{ web_root }}"
        owner: ubuntu
        group: ubuntu
        recurse: yes

    - name: 로컬 Flask 백엔드 업로드
      synchronize:
        src: "{{ lookup('env','HOME') }}/project_realeaste_map/20251027/backend/"
        dest: "{{ app_root }}/"
        rsync_opts:
          - "--delete"
          - "--exclude=venv/"
          - "--exclude=.venv/"
        ssh_args: "-i {{ lookup('env','HOME') }}/project_realeaste_map/20251027/terraform/id_suwon-redev -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
      delegate_to: localhost
      become: no

    - name: Flask 코드 권한 정리
      file:
        path: "{{ app_root }}"
        owner: ubuntu
        group: ubuntu
        recurse: yes

    - name: 기존 가상환경 제거
      file:
        path: "{{ app_root }}/venv"
        state: absent

    - name: 가상환경/의존성 설치
      shell: |
        python3 -m venv {{ app_root }}/venv
        {{ app_root }}/venv/bin/pip install --upgrade pip --break-system-packages
        {{ app_root }}/venv/bin/pip install -r {{ app_root }}/requirements.txt --break-system-packages
      become_user: ubuntu

    - name: React 빌드 산출물 업로드
      synchronize:
        src: "{{ lookup('env','HOME') }}/project_realeaste_map/20251027/suwon-redev-map/dist/"
        dest: "{{ web_root }}/"
        rsync_opts:
          - "--delete"
          - "--chown=www-data:www-data"
        ssh_args: "-i {{ lookup('env','HOME') }}/project_realeaste_map/20251027/terraform/id_suwon-redev -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
      delegate_to: localhost
      become: no

    - name: 웹 루트 권한 원복
      file:
        path: "{{ web_root }}"
        owner: www-data
        group: www-data
        recurse: yes

    - name: systemd 서비스 파일 생성 (gunicorn)
      copy:
        dest: /etc/systemd/system/app.service
        content: |
          [Unit]
          Description=Gunicorn Flask App
          After=network.target

          [Service]
          User=ubuntu
          Group=ubuntu
          WorkingDirectory={{ app_root }}
          Environment="PATH={{ app_root }}/venv/bin"
          ExecStart={{ app_root }}/venv/bin/gunicorn -w 2 -b 127.0.0.1:5000 app:app
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify: [ "restart app" ]

    - name: Nginx 서버블록
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
            listen 80 default_server;
            server_name _;
            root {{ web_root }};
            index index.html;

            location /api/ {
              proxy_pass http://127.0.0.1:5000/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
            }

            location / {
              try_files $uri /index.html;
            }
          }
      notify: [ "restart nginx" ]

  handlers:
    - name: restart nginx
      service: { name: nginx, state: restarted, enabled: yes }

    - name: restart app
      systemd: { name: app, state: restarted, enabled: yes }
